# TinyaML
# Copyright (C) 2007 Damien Leroux
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

#################################################################################
#   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #
#                                                                               #
#                                TINYAML TUTORIAL                               #
#                                Part II : Layers                               #
#                               3. Script language                              #
#                                   Exceptions                                  #
#                                                                               #
#   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #   #
#################################################################################

# Here we demonstrate the handling of exceptions in the script language
# That's a very basic handling at the moment.
# This tutorial assumes you already have knowledge of exception handling in OO languages.

require "script.wc"

script
	global a, b

	function divide(x, y)
		if y=0 then
			throw DivisionByZero		# Exceptions are just a symbol. They carry no data.
		else
			if y=1 then
				throw UselessDivision	# Any arbitrary symbol may be defined.
			end
		end
		return x/y
	end

	b=0.0
	while b<2.0 do
		try
			a = divide(1, b)
		catch
			DivisionByZero:			# A catch bloc starts with the exception name slash symbol followed by a colon.
				print("BANG !\n")
			UselessDivision:		# It ends with the next exception name OR the keyword `end'.
				print("Foobar.\n")
		end
		b=b+1
	end


end

# Example command and output :
#
# $ tinyaml 5.exceptions.script 
# BANG !
# Foobar.

