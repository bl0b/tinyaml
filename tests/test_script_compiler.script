#!/usr/share/tinyaml/script_compiler.wc

script
	global A, B, C

	A,B,C=1,2,3

	function toto(str, a) print(str, ":", a, "\n") end

	function test_asm1(x)
		print("test_asm1(",x)
		asm +$x mul 2 -$x end
		print(") = ", x, "\n")
	end

	function test_asm2(x)
		local y
		print("test_asm2(",x)
		asm +$x mul 2 -$y end
		print(") = ", y, "\n")
	end

	function gen_test(a,b)
		return function(c) print("a=",a," et b*c=",b*c,"\n") end
	end

	toto("A", A)
	test_asm1(23)
	test_asm2(23)
	C = gen_test(23, 5)
	C(9)

	#function test_thread(prio, args...)
	#	#local i, j
	#	print("Starting thread with prio=", prio, "...\n")
	#	args[0]=0
	#	while args[0]<10 do
	#		print(&Thread.PID(), "[", prio, "]  ", args[0], "\n")
	#		args[0]=args[0]+1
	#		args[1]=0
	#		while args[1]<100 do args[1]=args[1]+1 end
	#	end
	#end

	function test_thread(prio, args...)
		local i, j
		print("Starting thread with prio=", prio, "...\n")
		i=0
		while i<10 do
			print(&Thread.PID(), "[", prio, "]  ", i, "\n")
			i=i+1
			j=0
			while j<100 do j=j+1 end
		end
	end

	function int(z) asm +$z toI -$z end return z end

	C=0
	while C<200 do
		B=int(C/20)*10
		&Thread.new(B, function() test_thread(B, 0, 0) end)
		C=C+1
	end
	A=0
	while A<20 do A=A+1 print("___ ", A, "\n") end
	print("FIN\n")
end
